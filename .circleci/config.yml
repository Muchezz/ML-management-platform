# This code is licensed from CircleCI to the user under the MIT license.
# See here for details: https://circleci.com/developer/orbs/licensing
# This code is licensed from CircleCI to the user under the MIT license. See
# https://circleci.com/orbs/registry/licensing for details.
version: 2.1
description: Deploying to DigitalOcean Kubernetes Engine Orb

# Orb Dependencies
orbs:
  doctl: digitalocean/cli@0.1.1
  k8s: circleci/kubernetes@0.1.0

commands:
  install:
    description: "Install `doctl` and `kubectl` if not already installed."
    steps:
      - doctl/install
      - k8s/install
  initialize:
    description: "Initialize kubeconfig to connect to DigitalOcean Kubernetes Engine"
    parameters:
      cluster:
        description: "The Kubernetes cluster name."
        type: string
      digitalocean-access-token:
        default: DIGITALOCEAN_ACCESS_TOKEN
        description: The access token to connect DigitalOcean
        type: env_var_name
    steps:
      - doctl/initialize:
          digitalocean-access-token: <<parameters.digitalocean-access-token>>
      - run: |
          doctl kubernetes cluster kubeconfig save <<parameters.cluster>>

jobs:

  build-and-push-image:
    machine: true
    steps:
         - checkout
         - run: 
             name: Login to Dockerhub
             command: |
                echo $DOCKERHUB_PASSWORD | docker login -u $DOCKER_USER --password-stdin
         - run: 
             name: Build & Push the Preprocess image
             command: |
                docker build ./kubeflow-pipelines/boston_housing/preprocess_data --tag greentropikal/boston_pipeline_preprocessing
                docker push greentropikal/boston_pipeline_preprocessing

         - run: 
             name: Build & Push the Train image
             command: |
                docker build ./kubeflow-pipelines/boston_housing/train --tag greentropikal/boston_pipeline_train
                docker push greentropikal/boston_pipeline_train
         - run: 
             name: Build & Push the Test image
             command: |
                docker build ./kubeflow-pipelines/boston_housing/test --tag greentropikal/boston_pipeline_test
                docker push greentropikal/boston_pipeline_test
         - run: 
             name: Build & Push the Deploy image
             command: |
                docker build ./kubeflow-pipelines/boston_housing/deploy_model --tag greentropikal/boston_pipeline_deploy_model
                docker push greentropikal/boston_pipeline_deploy_model
          
            
  install_and_initialize_cli:
    description: |
      Install doctl and initialize to connect to DigitalOcean
    machine: true
    # executor: <<parameters.executor>>
    parameters:
      cluster:
        description: "The Kubernetes cluster name."
        type: string
      digitalocean-access-token:
        default: DIGITALOCEAN_ACCESS_TOKEN
        description: The access token to connect DigitalOcean
        type: env_var_name
      # executor:
      #   default: default
      #   description: |
      #     Executor to use for this job. Defaults to this orb's default executor.
      #   type: executor
    steps:
      - install
      - initialize:
          cluster: <<parameters.cluster>>
          digitalocean-access-token: <<parameters.digitalocean-access-token>>

workflows:
  deployment:
    jobs:
      - build-and-push-image
      - install_and_initialize_cli:
          requires:
            - build-and-push-image
          cluster: k8s-challenge
          # filters:
          #    branches:
          #      only: [main]